<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgit.persistence.ReviewsDAO">
	<resultMap id="reviewResult" type="ReviewsVO" >
		<id property="rno" column="rno" />
		
		<result property="uid" column="uid"/>
		<result property="rtitle" column="rtitle"/>
		<result property="rcontent" column="rcontent"/>
		<result property="rregdate" column="rregdate"/>
		<result property="risexist" column="risexist"/>
		<result property="ono" column="ono"/>
		<collection property="goods" ofType="GoodsVO" resultMap="reviewGoodResult"/>
	</resultMap>
	
	<resultMap type="GoodsVO" id="reviewGoodResult">
		<id property="gcode" column="gcode"/>
		<result property="gname" column="gname"/>
		<result property="gcategory" column="gcategory"/>
		<result property="gtitleimg" column="gtitleimg"/>
		<result property="gprice" column="gprice"/>
		<result property="gsupprice" column="gsupprice"/>
		<result property="gregdate" column="gregdate"/>
		<result property="gisdisplay" column="gisdisplay"/>
		<result property="gisonsale" column="gisonsale"/>
	</resultMap>
	<sql id="wheresql_rno">
		where rno = #{rno}
	</sql>
	<select id="reviewsListAll" resultMap="reviewResult">
		SELECT * FROM reviews r join goods g on r.gcode=g.gcode
		where rno > 0
		order by rno desc, rregdate desc
	</select>
	
	<select id="getMaxRno" resultType="int">
		select MAX(rno)+1 from reviews
	</select>
	
	<select id="reviewsSelectByNo" resultMap="reviewResult">
		SELECT * FROM reviews r join goods g on r.gcode=g.gcode
		<include refid="wheresql_rno"/>
	</select>
	
	<select id="listSearch" resultType="ReviewsVO">
		SELECT rno, gcode, uid, rtitle, rcontent, rregdate, risexist, ono FROM reviews
		<include refid="search"/>
		order by rno desc,rregdate desc
		limit #{pageStart},#{perPageNum}
	</select>
	
	<select id="searchCount" resultType="int">
		select count(*) from reviews 
		<include refid="search"/>
	</select>
	
	<sql id="search">
		<if test="searchType !=null">
			<if test="searchType =='t'.toString()">
				where rtitle like CONCAT('%',#{keyword},'%')
			</if>
			<if test="searchType =='c'.toString()">
				where rcontent like CONCAT('%',#{keyword},'%')
			</if>
			<if test="searchType =='w'.toString()">
				where uid like CONCAT('%',#{keyword},'%')
			</if>
			<if test="searchType =='tc'.toString()">
				where rtitle like CONCAT('%',#{keyword},'%') or rcontent like CONCAT('%',#{keyword},'%')
			</if>
			<if test="searchType =='cw'.toString()">
				where rcontent like CONCAT('%',#{keyword},'%') or uid like CONCAT('%',#{keyword},'%')
			</if>
			<if test="searchType =='tcw'.toString()">
				where rtitle like CONCAT('%',#{keyword},'%') or rcontent like CONCAT('%',#{keyword},'%') or uid like CONCAT('%',#{keyword},'%')
			</if>
		</if>
	</sql>
	
	<insert id="reviewsInsert">
		INSERT INTO reviews
		(gcode, uid, rtitle, rcontent, risexist, ono) values
		(#{goods.gcode}, #{uid}, #{rtitle}, #{rcontent}, #{risexist}, #{ono})
	</insert>
	
	<update id="reviewsUpdate">
		UPDATE reviews
		<set>
			<if test="rtitle != null">
				rtitle=#{rtitle},
			</if>
			<if test="rcontent != null">
				rcontent=#{rcontent},
			</if>
			<if test="risexist != null">
				risexist=#{risexist},
			</if>
		</set>
		<include refid="wheresql_rno"/>
	</update>

	<delete id="reviewsDelete">
		DELETE FROM  reviews
		<include refid="wheresql_rno"/>
	</delete>
	
</mapper>